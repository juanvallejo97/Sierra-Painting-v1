name: Flutter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  analyze-and-test:
    name: Analyze and Test Flutter
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
      
      - name: Analyze project source
        run: flutter analyze --fatal-infos
      
      - name: Run tests
        run: flutter test
      
      - name: Build APK
        run: flutter build apk --release
      
      - name: Check APK size budget
        run: |
          APK_SIZE=$(stat -c%s "build/app/outputs/flutter-apk/app-release.apk")
          APK_SIZE_MB=$((APK_SIZE / 1024 / 1024))
          MAX_SIZE_MB=50
          echo "APK Size: ${APK_SIZE_MB}MB (Budget: ${MAX_SIZE_MB}MB)"
          if [ $APK_SIZE_MB -gt $MAX_SIZE_MB ]; then
            echo "‚ùå APK size exceeds budget! ${APK_SIZE_MB}MB > ${MAX_SIZE_MB}MB"
            exit 1
          else
            echo "‚úÖ APK size within budget"
          fi
      
      - name: Report APK size
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const stats = fs.statSync('build/app/outputs/flutter-apk/app-release.apk');
            const sizeMB = (stats.size / 1024 / 1024).toFixed(2);
            const maxSizeMB = 50;
            const status = sizeMB <= maxSizeMB ? '‚úÖ' : '‚ùå';
            const body = `## üì¶ APK Size Report
            
            ${status} **${sizeMB}MB** / ${maxSizeMB}MB budget
            
            ${sizeMB > maxSizeMB ? '‚ö†Ô∏è APK size exceeds budget!' : '‚úÖ Within budget'}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  analyze-functions:
    name: Analyze Cloud Functions
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js with cache
        if: hashFiles('functions/package-lock.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json
      
      - name: Set up Node.js without cache
        if: hashFiles('functions/package-lock.json') == ''
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        working-directory: functions
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install --no-audit --no-fund
          fi
      
      - name: Run linter
        working-directory: ./functions
        run: npm run lint
      
      - name: Build TypeScript
        working-directory: ./functions
        run: npm run build
