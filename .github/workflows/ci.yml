name: CI

on:
  push:
    branches: [main, staging, production]
    paths:
      - "lib/**"
      - "test/**"
      - "pubspec.yaml"
      - "functions/**"
      - "firestore.rules"
      - "firestore.indexes.json"
      - ".github/workflows/**"
  pull_request:
    branches: [main, staging, production]
    paths:
      - "lib/**"
      - "test/**"
      - "pubspec.yaml"
      - "functions/**"
      - "firestore.rules"
      - "firestore.indexes.json"
      - ".github/workflows/**"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  functions-build:
    name: Functions - Build & Type Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: functions

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Build
        run: npm run build

      - name: Lint
        run: npm run lint

  functions-test:
    name: Functions - Unit Tests
    runs-on: ubuntu-latest
    needs: functions-build
    defaults:
      run:
        working-directory: functions

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  firestore-rules:
    name: Firestore Rules Tests
    runs-on: ubuntu-latest
    needs: functions-build

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Install dependencies
        working-directory: functions
        run: npm ci

      - name: Test Firestore Rules
        run: firebase emulators:exec --only firestore "npm --prefix functions run test:rules" || echo "Skipping rules tests - test:rules script not found"

  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5'
          channel: 'stable'
      - name: Flutter analyze
        run: flutter analyze

  test:
    name: Flutter - Unit Tests
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5'
          channel: 'stable'
      - name: Run tests
        run: flutter test --concurrency=1

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5'
          channel: 'stable'
      - name: Build web
        run: flutter build web --release --web-renderer html
      - name: Build android
        run: flutter build apk --release

  security-scan:
    name: Security - Dependency Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Install Functions dependencies
        working-directory: functions
        run: npm ci

      - name: npm audit (Functions)
        working-directory: functions
        run: |
          npm audit --production --audit-level=moderate || {
            echo "::warning::npm audit found vulnerabilities in functions dependencies"
            exit 0
          }

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5'
          channel: 'stable'

      - name: Install OSV-Scanner
        run: |
          curl -L https://github.com/google/osv-scanner/releases/latest/download/osv-scanner_linux_amd64 -o /usr/local/bin/osv-scanner
          chmod +x /usr/local/bin/osv-scanner

      - name: OSV-Scanner (Flutter/Dart)
        run: |
          osv-scanner --lockfile=pubspec.lock || {
            echo "::warning::OSV-Scanner found vulnerabilities in Flutter/Dart dependencies"
            exit 0
          }

      - name: Create Security Summary
        if: always()
        run: |
          echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Dependency security scan completed" >> $GITHUB_STEP_SUMMARY
          echo "- npm audit: Functions dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- OSV-Scanner: Flutter/Dart dependencies" >> $GITHUB_STEP_SUMMARY

  lint-yaml:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install yamllint
        run: pip install yamllint
      - name: Lint YAML
        run: yamllint .github/workflows/

