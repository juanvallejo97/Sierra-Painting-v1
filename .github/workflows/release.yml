name: Release Workflow - Canary Deployment

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      stage:
        description: 'Deployment stage'
        required: true
        type: choice
        options:
          - canary-10
          - promote-50
          - promote-100
          - rollback
      project:
        description: 'Firebase project'
        required: true
        type: choice
        options:
          - sierra-painting-prod
          - sierra-painting-staging

env:
  FLUTTER_VERSION: '3.35.5'
  NODE_VERSION: '18'
  JAVA_VERSION: '17'
  FIREBASE_PROJECT_PROD: 'sierra-painting-prod'
  FIREBASE_PROJECT_STAGING: 'sierra-painting-staging'

jobs:
  setup:
    name: Setup and Validate
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      project: ${{ steps.determine-project.outputs.project }}
      stage: ${{ steps.determine-stage.outputs.stage }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get-version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="manual-$(date +%Y%m%d-%H%M%S)"
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Determine project
        id: determine-project
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            PROJECT="${{ github.event.inputs.project }}"
          else
            PROJECT="${{ env.FIREBASE_PROJECT_PROD }}"
          fi
          echo "project=$PROJECT" >> $GITHUB_OUTPUT
          echo "Target project: $PROJECT"

      - name: Determine stage
        id: determine-stage
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            STAGE="${{ github.event.inputs.stage }}"
          else
            STAGE="canary-10"
          fi
          echo "stage=$STAGE" >> $GITHUB_OUTPUT
          echo "Deployment stage: $STAGE"

  lint_and_test_flutter:
    name: Lint and Test Flutter
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run Flutter analyze
        run: flutter analyze --fatal-infos

      - name: Run Flutter tests
        run: flutter test

  lint_and_test_functions:
    name: Lint and Test Functions
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: functions
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Build TypeScript
        run: npm run build

  smoke_tests:
    name: Run Smoke Tests
    runs-on: ubuntu-latest
    needs: [lint_and_test_flutter, lint_and_test_functions]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Install Functions dependencies
        working-directory: ./functions
        run: npm ci

      - name: Build Functions
        working-directory: ./functions
        run: npm run build

      - name: Start Firebase Emulators
        run: |
          firebase emulators:start --only auth,firestore,functions,storage &
          sleep 30

      - name: Run smoke tests
        run: |
          chmod +x scripts/smoke/run.sh
          bash scripts/smoke/run.sh

      - name: Stop emulators
        if: always()
        run: |
          firebase emulators:stop || true

  build_flutter_release:
    name: Build Flutter Release
    runs-on: ubuntu-latest
    needs: [setup, smoke_tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Build AAB (release)
        run: flutter build appbundle --release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-builds-${{ needs.setup.outputs.version }}
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          retention-days: 90

  deploy_canary_10:
    name: Deploy Canary (10% Traffic)
    runs-on: ubuntu-latest
    needs: [setup, build_flutter_release]
    if: needs.setup.outputs.stage == 'canary-10'
    environment:
      name: ${{ needs.setup.outputs.project }}-canary
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Deploy canary (10%)
        run: |
          chmod +x scripts/deploy_canary.sh
          ./scripts/deploy_canary.sh \
            --project ${{ needs.setup.outputs.project }} \
            --tag ${{ needs.setup.outputs.version }}

      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deployment-history-${{ needs.setup.outputs.version }}
          path: .deployment-history/
          retention-days: 90

  promote_canary_50:
    name: Promote Canary to 50%
    runs-on: ubuntu-latest
    needs: [setup, deploy_canary_10]
    if: needs.setup.outputs.stage == 'promote-50'
    environment:
      name: ${{ needs.setup.outputs.project }}-canary-50
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Run smoke tests
        run: |
          chmod +x scripts/smoke/run.sh
          bash scripts/smoke/run.sh

      - name: Promote to 50%
        run: |
          chmod +x scripts/promote_canary.sh
          ./scripts/promote_canary.sh \
            --project ${{ needs.setup.outputs.project }} \
            --stage 50 \
            --skip-checks

      - name: Upload promotion artifacts
        uses: actions/upload-artifact@v4
        with:
          name: promotion-50-${{ needs.setup.outputs.version }}
          path: .deployment-history/
          retention-days: 90

  promote_canary_100:
    name: Promote Canary to 100%
    runs-on: ubuntu-latest
    needs: [setup, promote_canary_50]
    if: needs.setup.outputs.stage == 'promote-100'
    environment:
      name: ${{ needs.setup.outputs.project }}-production
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Run smoke tests
        run: |
          chmod +x scripts/smoke/run.sh
          bash scripts/smoke/run.sh

      - name: Promote to 100%
        run: |
          chmod +x scripts/promote_canary.sh
          ./scripts/promote_canary.sh \
            --project ${{ needs.setup.outputs.project }} \
            --stage 100 \
            --skip-checks

      - name: Upload promotion artifacts
        uses: actions/upload-artifact@v4
        with:
          name: promotion-100-${{ needs.setup.outputs.version }}
          path: .deployment-history/
          retention-days: 90

  rollback:
    name: Rollback Deployment
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.stage == 'rollback'
    environment:
      name: ${{ needs.setup.outputs.project }}-rollback
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Rollback via traffic split
        run: |
          chmod +x scripts/rollback.sh
          ./scripts/rollback.sh \
            --project ${{ needs.setup.outputs.project }} \
            --method traffic

      - name: Upload rollback artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rollback-${{ needs.setup.outputs.version }}
          path: .deployment-history/
          retention-days: 90

  create_github_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [setup, deploy_canary_10, build_flutter_release]
    if: needs.setup.outputs.stage == 'canary-10' && github.event_name == 'push'
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: release-builds-${{ needs.setup.outputs.version }}
          path: ./release-builds

      - name: Download deployment history
        uses: actions/download-artifact@v5
        with:
          name: deployment-history-${{ needs.setup.outputs.version }}
          path: ./deployment-history

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./release-builds/app-release.apk
            ./release-builds/app-release.aab
          generate_release_notes: true
          draft: false
          prerelease: false
          body: |
            ## Sierra Painting ${{ needs.setup.outputs.version }}

            ### 🚀 Canary Deployment
            - Initial deployment at 10% traffic
            - Smoke tests passed
            - Ready for progressive rollout

            ### 📱 Mobile App Builds
            - **APK**: app-release.apk (for direct installation)
            - **AAB**: app-release.aab (for Google Play Store)

            ### 📊 Next Steps
            1. Monitor metrics for 6-24 hours
            2. Promote to 50%: Trigger workflow with `promote-50`
            3. Promote to 100%: Trigger workflow with `promote-100`
            4. Or rollback: Trigger workflow with `rollback`

            ### 🔗 Monitoring
            - [Firebase Console](https://console.firebase.google.com/project/${{ needs.setup.outputs.project }}/overview)
            - [Cloud Functions](https://console.cloud.google.com/functions/list?project=${{ needs.setup.outputs.project }})
            - [Cloud Run](https://console.cloud.google.com/run?project=${{ needs.setup.outputs.project }})

  post_deployment_summary:
    name: Post-Deployment Summary
    runs-on: ubuntu-latest
    needs: [setup, deploy_canary_10, promote_canary_50, promote_canary_100, rollback]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Print deployment summary
        run: |
          echo "================================================"
          echo "📊 Deployment Summary"
          echo "================================================"
          echo ""
          echo "Version: ${{ needs.setup.outputs.version }}"
          echo "Project: ${{ needs.setup.outputs.project }}"
          echo "Stage: ${{ needs.setup.outputs.stage }}"
          echo ""
          echo "Job Results:"
          echo "  - Deploy Canary 10%: ${{ needs.deploy_canary_10.result }}"
          echo "  - Promote 50%: ${{ needs.promote_canary_50.result }}"
          echo "  - Promote 100%: ${{ needs.promote_canary_100.result }}"
          echo "  - Rollback: ${{ needs.rollback.result }}"
          echo ""
          echo "🔗 Monitoring Links:"
          echo "  Firebase: https://console.firebase.google.com/project/${{ needs.setup.outputs.project }}"
          echo "  Cloud Run: https://console.cloud.google.com/run?project=${{ needs.setup.outputs.project }}"
          echo ""
