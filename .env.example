# Sierra Painting - Environment Configuration Template
#
# SECURITY NOTICE:
# - NEVER commit actual secrets to git
# - Copy this file to .env and fill with your values
# - Rotate credentials immediately if accidentally committed
# - Use GCP Secret Manager for production secrets
#
# Firebase project IDs for different environments:
# - Development: Use Firebase emulators (no real project needed)
# - Staging: sierra-painting-staging
# - Production: sierra-painting-prod

# ============================================================
# FIREBASE CONFIGURATION
# ============================================================

# Firebase Project ID (required)
# Get from: Firebase Console > Project Settings
FIREBASE_PROJECT_ID=your-project-id

# Firebase API Key (required for web)
# Get from: Firebase Console > Project Settings > Web App
# NOTE: Web API keys can be public, but should be restricted by:
# - Firebase App Check (enforced in production)
# - API key restrictions in GCP Console
FIREBASE_API_KEY=your-api-key

# Firebase Auth Domain (required for web)
FIREBASE_AUTH_DOMAIN=your-project-id.firebaseapp.com

# Firebase Storage Bucket (required)
FIREBASE_STORAGE_BUCKET=your-project-id.firebasestorage.app

# Firebase Messaging Sender ID (optional, for push notifications)
FIREBASE_MESSAGING_SENDER_ID=your-sender-id

# Firebase App ID (required)
FIREBASE_APP_ID=your-app-id

# Firebase CI/CD Token (NEVER commit this - use CI secrets instead)
# Generate with: firebase login:ci
# Store in: GitHub Secrets > FIREBASE_TOKEN
# FIREBASE_TOKEN=DO_NOT_COMMIT_USE_GITHUB_SECRETS

# Android Firebase configuration
ANDROID_FIREBASE_API_KEY=your-android-api-key
ANDROID_FIREBASE_APP_ID=your-android-app-id
ANDROID_FIREBASE_MESSAGING_SENDER_ID=your-sender-id
ANDROID_FIREBASE_PROJECT_ID=your-project-id

# ============================================================
# ENVIRONMENT
# ============================================================

# Environment name: development, staging, production
ENVIRONMENT=development

# Enable Firebase emulators for local development
USE_EMULATORS=true

# Emulator ports (when USE_EMULATORS=true)
FIRESTORE_EMULATOR_PORT=8080
AUTH_EMULATOR_PORT=9099
FUNCTIONS_EMULATOR_PORT=5001
STORAGE_EMULATOR_PORT=9199

# ============================================================
# APP CHECK (Security)
# ============================================================

# Enable App Check enforcement (REQUIRED for staging/production)
# Set to false ONLY for local development and testing
APP_CHECK_ENFORCE=false

# ReCAPTCHA v3 Site Key for Web (required when APP_CHECK_ENFORCE=true)
# Get from: https://www.google.com/recaptcha/admin
# Register your domain and get site key
RECAPTCHA_V3_KEY=your-recaptcha-site-key

# App Check Debug Token (for local development only)
# Generate in Firebase Console > App Check > Manage debug tokens
# Expires every 7 days - rotate regularly
# APP_CHECK_DEBUG_TOKEN=your-debug-token

# ============================================================
# API CONFIGURATION
# ============================================================

# API timeout in seconds (default: 30)
API_TIMEOUT_SECONDS=30

# Max retry attempts for failed requests (default: 3)
API_MAX_RETRIES=3

# ============================================================
# FEATURE FLAGS (Optional - Override Remote Config defaults)
# ============================================================

# V1 Features (active by default)
# FEATURE_CLOCK_IN_ENABLED=true
# FEATURE_CLOCK_OUT_ENABLED=true
# FEATURE_JOBS_TODAY_ENABLED=true

# V2 Features (gated by default)
# FEATURE_CREATE_QUOTE_ENABLED=false
# FEATURE_MARK_PAID_ENABLED=false

# V4 Features (optional by default)
# FEATURE_STRIPE_CHECKOUT_ENABLED=false

# Operational flags
# OFFLINE_MODE_ENABLED=true
# GPS_TRACKING_ENABLED=true

# ============================================================
# STRIPE (Optional - only if using Stripe payments)
# ============================================================

# Stripe Publishable Key (client-side)
# Get from: Stripe Dashboard > Developers > API keys
# NOTE: Publishable keys are safe to expose in client code
# STRIPE_PUBLISHABLE_KEY=pk_test_...

# Use test mode (true for development, false for production)
# STRIPE_TEST_MODE=true

# ============================================================
# THIRD-PARTY API KEYS
# ============================================================

# OpenAI API Key (NEVER commit - use GCP Secret Manager)
# For production: Use Cloud Functions environment config
# Generate at: https://platform.openai.com/api-keys
# OPENAI_API_KEY=USE_GCP_SECRET_MANAGER_IN_PRODUCTION

# ============================================================
# OBSERVABILITY
# ============================================================

# Enable performance monitoring (default: true in debug, false in release)
# PERFORMANCE_MONITORING_ENABLED=true

# Enable error tracking (default: true)
# ERROR_TRACKING_ENABLED=true

# Enable debug logging (default: true in debug, false in release)
# DEBUG_LOGGING_ENABLED=true

# Log level: debug, info, warning, error
# LOG_LEVEL=debug

# ============================================================
# TESTING
# ============================================================

# Test user credentials (for E2E tests)
# Use Firebase Auth emulator users - NEVER use production accounts
TEST_EMAIL=test@example.com
TEST_PASSWORD=test-password-123

# ReCAPTCHA Site Key for testing
# Use test keys that always pass (for automated tests)
RECAPTCHA_SITE_KEY=6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI

# CI Headless mode
# 'new' for modern Puppeteer headless mode
CI_HEADLESS=new

# ============================================================
# SECURITY BEST PRACTICES
# ============================================================
#
# 1. NEVER commit .env with real values to git
# 2. Use different .env files per environment (.env.staging, .env.production)
# 3. Store production secrets in:
#    - GitHub Secrets (for CI/CD)
#    - GCP Secret Manager (for Cloud Functions)
# 4. Rotate credentials regularly (every 90 days minimum)
# 5. Enable Firebase App Check in production
# 6. Restrict API keys in GCP Console
# 7. Use service accounts with minimal permissions
# 8. Enable audit logging for security events
#
# For more info: docs/SECURITY.md

# ============================================================
# CREDENTIAL ROTATION CHECKLIST
# ============================================================
#
# If secrets are compromised, rotate immediately:
# [ ] 1. Firebase API keys (regenerate in console)
# [ ] 2. Firebase deployment token (firebase login:ci)
# [ ] 3. OpenAI API key (regenerate in platform)
# [ ] 4. Stripe keys (rollover in dashboard)
# [ ] 5. Update GitHub Secrets
# [ ] 6. Update GCP Secret Manager
# [ ] 7. Deploy updated configs
# [ ] 8. Audit access logs for suspicious activity
# [ ] 9. Document incident in SECURITY_INCIDENTS.md
# [ ] 10. Review and update security policies
