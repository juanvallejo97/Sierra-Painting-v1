version: "1.0"
playbook: "collab_batch_02_ci_teardown_smoke"
owner: "Sierra Painting"

cards:

  - id: jest-teardown-for-firestore-tests
    why: "Fix 'worker failed to exit gracefully' by closing open handles."
    create_or_update:
      - path: "tests/rules/jest.setup.ts"
        body: |
          // Increase timeouts for emulator startup/cleanup
          jest.setTimeout(30000);
      - path: "tests/rules/jest.teardown.ts"
        body: |
          import { getApps, deleteApp } from "firebase/app";
          // If you use rules-unit-testing's initializeTestEnvironment, prefer env.cleanup().
          // This is a safety net to close any stray client apps.
          export default async function globalTeardown() {
            // Close any client apps still registered
            await Promise.all(getApps().map(a => deleteApp(a)));
          }
      - path: "tests/rules/jest.config.cjs"
        body: |
          module.exports = {
            testEnvironment: "node",
            setupFilesAfterEnv: ["<rootDir>/jest.setup.ts"],
            globalTeardown: "<rootDir>/jest.teardown.ts",
            testMatch: ["**/?(*.)+(spec|test).[tj]s"],
            // Keep reporters minimal in CI to reduce noise
            reporters: ["default"]
          };
    edit:
      - file: "package.json"
        ops:
          - ensure_json:
              scripts:
                test: "jest --runInBand --detectOpenHandles --forceExit"
    accept:
      - "Local `npm test` ends clean (no open-handle warning)"
      - "CI rules job exits 0 without worker-exit message"

  - id: prefer-env-cleanup-if-using-test-environment
    why: "rules-unit-testing provides its own cleanup"
    note: "If tests use `initializeTestEnvironment`, ensure `await env.cleanup()` in `afterAll` of each suite or a shared helper."
    accept:
      - "All suites either call env.cleanup() or a shared afterAll does"

  - id: explicit-staging-url
    why: "Hosting site id may differ from project id â€” avoid false red/green."
    edits:
      - file: ".github/workflows/staging.yml"
        ops:
          - ensure_yaml_env:
              STAGING_URL: "https://<YOUR-STAGING-SITE>.web.app"
      - file: "scripts/smoke.mjs"
        ops:
          - replace_line_matching: "const site ="
            with: "const site = process.env.SMOKE_URL || process.env.STAGING_URL;"
    accept:
      - "CI log shows SMOKE_URL resolved to expected domain"
      - "Smoke fails correctly if wrong site is set"

  - id: tougher-smoke
    why: "Catch bad deploys even when 200 is returned."
    patch:
      file: "scripts/smoke.mjs"
      replace_with: |
        import fetch from "node-fetch";
        const site = process.env.SMOKE_URL || process.env.STAGING_URL;
        if (!site) throw new Error("SMOKE_URL/STAGING_URL not set");
        const res = await fetch(site, { redirect: "follow" });
        if (res.status < 200 || res.status >= 400) throw new Error(`Hosting not healthy: ${res.status}`);
        const html = await res.text();
        if (!html.includes("<title") && !html.includes("flutter")) {
          throw new Error("Unexpected payload (app shell markers missing)");
        }
        console.log("Hosting OK:", res.status);
    accept:
      - "Smoke step prints 'Hosting OK' and exits 0"

  - id: mirror-cleanup-policy-to-release
    why: "Keep all deploy entrypoints non-interactive."
    edits:
      - file: ".github/workflows/release.yml"
        ops:
          - insert_after_step_named: "Setup Firebase CLI"
            body: |
              - name: Ensure Functions artifacts cleanup policy
                run: |
                  firebase functions:artifacts:setpolicy --keep=50 --age=14d --force --project ${{ env.FB_PROJECT }}
                  firebase functions:artifacts:getpolicy --project ${{ env.FB_PROJECT }}
    accept:
      - "Release workflow prints policy and deploys without prompt"

  - id: PR-open-and-validate
    why: "Run everything in real CI."
    run:
      - git: "create branch chore/ci-batch-02"
      - commit: "Add Jest teardown, stricter smoke, explicit STAGING_URL, mirror cleanup policy"
      - push_pr: "Open PR 'CI: close open handles + tougher smoke + explicit staging url'"
    accept:
      - "PR checks pass: rules tests clean, smoke passes, no interactive prompts"
