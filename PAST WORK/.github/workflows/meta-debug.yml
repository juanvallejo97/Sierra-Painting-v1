name: META-DBG-01 E2E Debug Harness

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  e2e-debug:
    name: End-to-end debug (spawn → validate → collect)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Preflight - verify required scripts
        run: |
          set -e
          test -f scripts/tokens.html
          test -f scripts/validate_runner.js
          test -f scripts/validate_tokens.js
          test -f scripts/generate_firebase_config.js
          echo "Preflight OK"

      - name: Generate firebase config (from env/.env)
        run: node scripts/generate_firebase_config.js

      - name: Validate (spawn → detect-port → run puppeteer)
        run: |
          set -euo pipefail
          # Export secrets into the environment for the validator run. These are populated by GitHub at runtime.
          export TEST_EMAIL='${{ secrets.TEST_EMAIL }}'
          export TEST_PASS='${{ secrets.TEST_PASS }}'
          export RECAPTCHA_SITE_KEY='${{ secrets.RECAPTCHA_SITE_KEY }}'
          export APP_CHECK_DEBUG_TOKEN='${{ secrets.APP_CHECK_DEBUG_TOKEN }}'
          export FIREBASE_AUTH_EMULATOR_HOST='${{ secrets.FIREBASE_AUTH_EMULATOR_HOST }}'
          export NODE_OPTIONS='${{ secrets.NODE_OPTIONS }}'
          HEADLESS='${{ secrets.CI_HEADLESS }}'
          HEADLESS=${HEADLESS:-new}
          echo "Invoking validator runner (headless=${HEADLESS})"
          node scripts/validate_runner.js --port=3000 --debug=true --headless=${HEADLESS}

      - name: Generate report
        run: node scripts/generate_summary.js || true

      - name: Summarize (quick triage to console)
        run: |
          echo "--- token_validation_log.txt (tail) ---"
          if [ -f logs/token_validation_log.txt ]; then tail -n 80 logs/token_validation_log.txt || true; else echo "(no log found)"; fi
          echo "--- probed URL (if present) ---"
          node -e "const fs=require('fs'); const p='logs/token_validation_log.txt'; if(fs.existsSync(p)){const j=JSON.parse(fs.readFileSync(p,'utf8')); console.log(j.url||'(no url)');} else console.log('(no log)');"

      - name: Upload diagnostic artifacts
        uses: actions/upload-artifact@v4
        with:
          name: meta-debug-artifacts
          path: |
            logs/token_validation_log.txt
            logs/validation_status.txt
            reports/firebase_validation_capture.png
            reports/firebase_validation_summary.html
            scripts/firebase_config.json

      - name: Quick success check
        run: |
          if [ ! -f logs/token_validation_log.txt ]; then echo "FAIL: missing logs/token_validation_log.txt"; exit 1; fi
          if [ ! -f reports/firebase_validation_summary.html ]; then echo "FAIL: missing report"; exit 2; fi
          node -e "const fs=require('fs'); const j=JSON.parse(fs.readFileSync('logs/token_validation_log.txt','utf8')); const ok=(j.logs && (j.logs.join('\n').includes('App Check: reCAPTCHA v3 enabled') || j.logs.join('\n').includes('App Check: DEBUG token mode.') || j.app || j.id)); if(!ok){ console.error('Validation artifacts present but checks failed'); process.exit(3);} console.log('Meta debug: basic checks passed');"
